%!PS-Adobe-3.0 EPSF-3.0
%APL_DSC_Encoding: UTF8
%%Title: (Unknown)
%%Creator: (Unknown)
%%CreationDate: (Unknown)
%%For: (Unknown)
%%DocumentData: Clean7Bit
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox: 0 0 470 112
%%EndComments
%%BeginProlog
%%BeginFile: cg-pdf.ps
%%Copyright: Copyright 2000-2004 Apple Computer Incorporated.
%%Copyright: All Rights Reserved.
currentpacking true setpacking
/cg_md 141 dict def
cg_md begin
/L3? languagelevel 3 ge def
/bd{bind def}bind def
/ld{load def}bd
/xs{exch store}bd
/xd{exch def}bd
/cmmtx matrix def
mark
/sc/setcolor
/scs/setcolorspace
/dr/defineresource
/fr/findresource
/T/true
/F/false
/d/setdash
/w/setlinewidth
/J/setlinecap
/j/setlinejoin
/M/setmiterlimit
/i/setflat
/rc/rectclip
/rf/rectfill
/rs/rectstroke
/f/fill
/f*/eofill
/sf/selectfont
/s/show
%/as/ashow
/xS/xshow
/yS/yshow
/xyS/xyshow
/S/stroke
/m/moveto
/l/lineto
/c/curveto
/h/closepath
/n/newpath
/q/gsave
/Q/grestore
counttomark 2 idiv
%dup (number of ld's = )print == flush	% *** how many 
{ld}repeat pop
/SC{	% CSname
    /ColorSpace fr scs
}bd
/sopr /setoverprint where{pop/setoverprint}{/pop}ifelse ld
/soprm /setoverprintmode where{pop/setoverprintmode}{/pop}ifelse ld
/cgmtx matrix def
/sdmtx{cgmtx currentmatrix pop}bd
/CM {cgmtx setmatrix}bd		% pop the ctm: our gstate ctm on host is now identity
/cm {cmmtx astore CM concat}bd	% reset the matrix and then concat
/W{clip newpath}bd
/W*{eoclip newpath}bd

statusdict begin product end dup (HP) anchorsearch{
    pop pop pop	% pop off the search results
    true
}{
    pop	% previous search result
   (hp) anchorsearch{
	pop pop true
    }{
	pop false
    }ifelse
}ifelse

{	% HP is the product: we use this method of stroking because of a bug in their clone printers with certain T3 fonts
    { 
	{ % charCode Wx Wy
	    pop pop % charCode
	    (0)dup 0 4 -1 roll put
	    F charpath
	}cshow
    }
}{
    {F charpath}
}ifelse
/cply exch bd
/cps {cply stroke}bd
/pgsave 0 def
/bp{/pgsave save store}bd
/ep{pgsave restore showpage}def		% dont' bind
/re{4 2 roll m 1 index 0 rlineto 0 exch rlineto neg 0 rlineto h}bd

/scrdict 10 dict def
/scrmtx matrix def
/patarray 0 def
/createpat{patarray 3 1 roll put}bd
/makepat{
scrmtx astore pop
gsave
initgraphics
CM 
patarray exch get
scrmtx
makepattern
grestore
setpattern
}bd

/cg_BeginEPSF{
    userdict save/cg_b4_Inc_state exch put
    userdict/cg_endepsf/cg_EndEPSF load put
    count userdict/cg_op_count 3 -1 roll put 
    countdictstack dup array dictstack userdict/cg_dict_array 3 -1 roll put
    3 sub{end}repeat
    /showpage {} def
    0 setgray 0 setlinecap 1 setlinewidth 0 setlinejoin
    10 setmiterlimit [] 0 setdash newpath
    false setstrokeadjust false setoverprint	% don't use F
}bd
/cg_EndEPSF{
  countdictstack 3 sub { end } repeat
  cg_dict_array 3 1 index length 3 sub getinterval
  {begin}forall
  count userdict/cg_op_count get sub{pop}repeat
  userdict/cg_b4_Inc_state get restore
  F setpacking
}bd

/cg_biproc{currentfile/RunLengthDecode filter}bd
/cg_aiproc{currentfile/ASCII85Decode filter/RunLengthDecode filter}bd
/ImageDataSource 0 def
L3?{
    /cg_mibiproc{pop pop/ImageDataSource{cg_biproc}def}bd
    /cg_miaiproc{pop pop/ImageDataSource{cg_aiproc}def}bd
}{
    /ImageBandMask 0 def
    /ImageBandData 0 def
    /cg_mibiproc{
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/RunLengthDecode filter dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
    /cg_miaiproc{	
	string/ImageBandMask xs
	string/ImageBandData xs
	/ImageDataSource{[currentfile/ASCII85Decode filter/RunLengthDecode filter
	    dup ImageBandMask/readstring cvx
	    /pop cvx dup ImageBandData/readstring cvx/pop cvx]cvx bind}bd
    }bd
}ifelse
/imsave 0 def
/BI{save/imsave xd mark}bd
/EI{imsave restore}bd
/ID{
counttomark 2 idiv
dup 2 add	% leave room for imagetype and imagematrix
dict begin
{def} repeat
pop		% remove mark
/ImageType 1 def
/ImageMatrix[Width 0 0 Height neg 0 Height]def
currentdict dup/ImageMask known{ImageMask}{F}ifelse exch
% currentdict on stack
L3?{
    dup/MaskedImage known
    { 
	pop
	<<
	    /ImageType 3
	    /InterleaveType 2
	    /DataDict currentdict
	    /MaskDict
	    <<  /ImageType 1
		/Width Width
		/Height Height
		/ImageMatrix ImageMatrix
		/BitsPerComponent 1
		/Decode [0 1]
		currentdict/Interpolate known
		{/Interpolate Interpolate}if
	    >>
	>>
    }if
}if
exch
{imagemask}{image}ifelse	
end	% pop imagedict from dict stack
}bd

/cguidfix{statusdict begin mark version end
{cvr}stopped{cleartomark 0}{exch pop}ifelse
2012 lt{dup findfont dup length dict begin
{1 index/FID ne 2 index/UniqueID ne and
{def} {pop pop} ifelse}forall
currentdict end definefont pop
}{pop}ifelse
}bd
/t_array 0 def
/t_i 0 def
/t_c 1 string def
/x_proc{ % x y
    exch t_array t_i get add exch moveto
    /t_i t_i 1 add store
}bd
/y_proc{ % x y
    t_array t_i get add moveto
    /t_i t_i 1 add store
}bd
/xy_proc{
        % x y
	t_array t_i 2 copy 1 add get 3 1 roll get 
	4 -1 roll add 3 1 roll add moveto
	/t_i t_i 2 add store
}bd
/sop 0 def		% don't bind sop
/cp_proc/x_proc ld 	% default moveto proc is for xwidths only
/base_charpath		% string array
{
    /t_array xs
    /t_i 0 def
    { % char
	t_c 0 3 -1 roll put
        currentpoint
	t_c cply sop
        cp_proc
    }forall
    /t_array 0 def
}bd
/sop/stroke ld		% default sop is stroke. Done here so we don't bind in /base_charpath 

% default sop is stroke
/nop{}def
/xsp/base_charpath ld
/ysp{/cp_proc/y_proc ld base_charpath/cp_proc/x_proc ld}bd
/xysp{/cp_proc/xy_proc ld base_charpath/cp_proc/x_proc ld}bd
/xmp{/sop/nop ld /cp_proc/x_proc ld base_charpath/sop/stroke ld}bd
/ymp{/sop/nop ld /cp_proc/y_proc ld base_charpath/sop/stroke ld}bd
/xymp{/sop/nop ld /cp_proc/xy_proc ld base_charpath/sop/stroke ld}bd
/refnt{ % newname encoding fontname
findfont dup length dict copy dup
/Encoding 4 -1 roll put 
definefont pop
}bd
/renmfont{ % newname fontname
findfont dup length dict copy definefont pop
}bd

L3? dup dup{save exch}if

% languagelevel2 ONLY code goes here

/Range 0 def
/DataSource 0 def
/val 0 def
/nRange 0 def
/mulRange 0 def
/d0 0 def
/r0 0 def
/di 0 def
/ri 0 def
/a0 0 def
/a1 0 def
/r1 0 def
/r2 0 def
/dx 0 def
/Nsteps 0 def
/sh3tp 0 def
/ymax 0 def
/ymin 0 def
/xmax 0 def
/xmin 0 def

/setupFunEval % funDict -- 	% this calculates and sets up a function dict for evaulation.
{
    begin
	/nRange Range length 2 idiv store
	/mulRange   % precompute the range data needed to map a sample value from the table to a range value
		    % this data looks like [ range0mul range0min range1mul range1min ... rangeN-1mul rangeN-1min ]
	[ 
	    0 1 nRange 1 sub
	    { % index
		    2 mul/nDim2 xd		% 2*dimension# we are dealing with
		    Range nDim2 get		% ymin
		    Range nDim2 1 add get	% ymin ymax 
		    1 index sub			% ymin (ymax-ymin)
						% xmin = 0, xmax = 255 (2^bitspersample - 1)
		    255 div			% ymin (ymax-ymin)/(xmax - xmin)
		    exch			% (ymax-ymin)/(xmax - xmin) ymin
	    }for
	]store
    end
}bd

/FunEval % val1 fundict -> comp1 comp2 ... compN
{
    begin
	% the value passed in is the base index into the table
	nRange mul /val xd	% compute the actual index to the table
				% since there are nRange entries per base index
	0 1 nRange 1 sub
	{
	    dup 2 mul/nDim2 xd % dim
	    val	% base value to use to do our lookup
	    add DataSource exch get %  lookedupval
	    mulRange nDim2 get mul 	% lookedupval*(ymax-ymin)/(xmax-xmin)
	    mulRange nDim2 1 add get % lookedupval*(ymax-ymin)/(xmax-xmin) ymin
	    add % interpolated result
	}for	% comp1 comp2 ... compN
    end
}bd

/max % a b -> max(a, b)
{
	2 copy lt
	{exch pop}{pop}ifelse
}bd

/sh2
{	% emulation of shading type 2. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 x1 y1
	3 index 3 index translate	% origin is now at beginning point of shading
					% x0 y0 x1 y1
	3 -1 roll sub	% x0 x1 y1-y0
	3 1 roll exch 	% y1-y0 x1 x0
	sub				% y1-y0 x1-x0
	2 copy
	dup mul exch dup mul add sqrt	% length of segment between two points
	dup
	scale  
	atan	% atan (dy/dx)
	%dup (rotation angle = )print ==
	rotate		% now line between 0,0 and 1,0 is the line perpendicular to which the axial lines are drawn					
	
	/Function load setupFunEval	% may need to setup function dictionary by calling setupFunEval
	
	% this is now specific to axial shadings. Compute the maximum bounds to fill
	clippath {pathbbox}stopped {0 0 0 0}if newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs
	currentdict/Extend known
	{
		/Extend load 0 get
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			xmin ymin xmin abs ymax ymin sub rectfill
		}if
	}if
	% paint the rects. The sampling frequency is that of our table
	/Nsteps/Function load/Size get 0 get 1 sub store
	/dx 1 Nsteps div store
	gsave
		/di ymax ymin sub store
		/Function load
		% loop Nsteps + 1 times, incrementing the index by 1 each time
		0 1 Nsteps
		{
			1 index FunEval sc
			0 ymin dx di rectfill
			dx 0 translate
		}for
		pop	% pop our function
	grestore	% origin is back to start point
	currentdict/Extend known
	{
		/Extend load 1 get
		{	
			Nsteps/Function load FunEval sc	% last element
			1 ymin xmax 1 sub abs ymax ymin sub rectfill
		}if
	}if
}bd

/shp	% this paints our shape for shading type 3
{	% x1 r1 x0 r0 -
	4 copy

	% fill interior arc
	dup 0 gt{
		0 exch a1 a0 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a0 a1 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill

	% fill exterior arc
	dup 0 gt{
		0 exch a0 a1 arc
	}{
		pop 0 moveto
	}ifelse

	dup 0 gt{
		0 exch a1 a0 arcn
	}{
		pop 0 lineto
	}ifelse
	
	fill
}bd

/calcmaxs
{	% calculate maximum distance vector from origin to corner points
	% of bbox
	xmin dup mul ymin dup mul add sqrt		% (xmin2 + ymin2)
	xmax dup mul ymin dup mul add sqrt		% (xmax2 + ymin2)
	xmin dup mul ymax dup mul add sqrt		% (xmin2 + ymax2)
	xmax dup mul ymax dup mul add sqrt		% (xmax2 + ymax2)
	max max max								% maximum value
}bd

/sh3
{	% emulation of shading type 3. Assumes shading dictionary is top dictionary on the dict stack
	/Coords load aload pop 	% x0 y0 r1 x1 y1 r2
	5 index 5 index translate	% origin is now at first circle origin
	3 -1 roll 6 -1 roll sub		% y0 r1 y1 r2 dx
	3 -1 roll 5 -1 roll sub		% r1 r2 dx dy
	2 copy dup mul exch dup mul add sqrt
	/dx xs						% r1 r2 dx dy
	2 copy 0 ne exch 0 ne or
	{
		% r1 r2 dx dy
		exch atan rotate	% we are now rotated so dy is zero and positive values of dx move us as expected
	}{
		pop pop
	}ifelse
	% r1 r2		
	/r2 xs
	/r1 xs
	/Function load 
	dup/Size get 0 get 1 sub	% this is the size of our table minus 1
	/Nsteps xs		% at some point we should optimize this better so NSteps is based on needed steps for the device
	setupFunEval		% may need to setup function dictionary by calling setupFunEval
	% determine the case:
	% case 0: circle1 inside circle2
	% case 1: circle 2 inside circle 1
	% case 2: r1 = r2 
	% case 3: r1 != r2
	dx r2 add r1 lt{
		% circle 2 inside of circle 1
		0 
	}{
		dx r1 add r2 le
		{ % circle 1 inside of circle 2
			1
		}{ % circles don't contain each other
			r1 r2 eq
			{	% equal
				2
			}{ % r1 != r2
				3
			}ifelse		
		}ifelse
	}ifelse
	/sh3tp xs		% sh3tp has the number of our different cases
	clippath {pathbbox}stopped {0 0 0 0}if 
	newpath 	% x0 y0 x1 y1
	/ymax xs
	/xmax xs
	/ymin xs
	/xmin xs

	% Arc angle atan( sqrt((dx*dx + dy*dy) - dr*dr), dr)
	dx dup mul r2 r1 sub dup mul sub dup 0 gt
	{
		sqrt r2 r1 sub atan
		/a0 exch 180 exch sub store 
		/a1 a0 neg store 
	}{
		pop
		/a0 0 store
		/a1 360 store		
	}ifelse		

	currentdict/Extend known
	{
		/Extend load 0 get r1 0 gt and	% no need to extend if the radius of the first end is 0
		{	
			0/Function load FunEval sc	% evaluate the function to get a color and set it
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{	% case 0
					dx 0 r1 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				}
				{	% case 1
					r1 0 gt{0 0 r1 0 360 arc fill}if
				}
				{	% case 2
					% r1 == r2, extend 0
					% r3 = r, x3 = -(abs(minx) + r), x1 = 0
				
					% x(i+1) r(i+1) x(i) r(i) shp
					0 r1 xmin abs r1 add neg r1 shp
				}
				{	% case 3
					% no containment, r1 != r2
				
					r2 r1 gt{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1
						r1 neg r2 r1 sub div dx mul	% this is point of beginning circle
						0	% point of ending circle
						shp	% takes x(i+1) r(i+1) x(i) r(i)
					}{	% the first circle is the bigger of the two
						% we find a circle on our line which is outside the bbox in the
						% negative direction
						% x(i+1) r(i+1) x(i) r(i) shp
						0 r1 calcmaxs	% 0 r1 maxs
						dup
						% calculating xs: (-(maxs+r2)*x2)/(x2-(r1-r2))
						r2 add dx mul dx r1 r2 sub sub div
						neg				% maxs xs'
						exch 1 index	% xs' maxs xs'
						abs exch sub
						shp
					}ifelse
				} 
			}sh3tp get exec	% execute the extend at beginning proc for our shading type
		}if
	}if

	% now do the shading
	/d0 0 store
	/r0 r1 store
	/di dx Nsteps div store
	/ri r2 r1 sub Nsteps div store 
	/Function load 
	0 1 Nsteps
	{	% function t(i)
		1 index FunEval sc
		d0 di add r0 ri add d0 r0 shp
		{
		% fill interior arc
		d0 0 r0 a1 a0 arc
		d0 di add 0 r0 ri add a0 a1 arcn
		fill
		
		% fill exterior arc
		d0 0 r0 a0 a1 arc
		d0 di add 0 r0 ri add a1 a0 arcn
		fill
		}pop
		
		% advance to next
		/d0 d0 di add store
		/r0 r0 ri add store
	}for
	pop	% pop our function dict

	% handle Extend
	currentdict/Extend known
	{
		/Extend load 1 get r2 0 gt and	% no need to extend if the radius of the last end is 0
		{	
			Nsteps/Function load FunEval sc	% last element
			% case 0: circle1 inside circle2
			% case 1: circle 2 inside circle 1
			% case 2: circles don't contain each other and r1 == r2
			% case 3: circles don't contain each other and r1 != r2
			{ 
				{
					dx 0 r2 0 360 arc fill
				} 
				{
					dx 0 r2 360 0 arcn
					xmin ymin moveto
					xmax ymin lineto
					xmax ymax lineto
					xmin ymax lineto
					xmin ymin lineto
					eofill		% for the bigger radius we fill everything except our circle
				} 
				{	% r1 == r2, extend 1
					% r3 = r, x3 = (abs(xmax) + r), x1 = dx
					% x(i+1) r(i+1) x(i) r(i) shp
					xmax abs r1 add r1 dx r1 shp
				}	
				{	% no containment, r1 != r2
			
					r2 r1 gt{
						% we find a circle on our line which is outside the bbox in the
						% positive direction
						% x(i+1) r(i+1) x(i) r(i) shp
						calcmaxs dup	% maxs maxs
						% calculating xs: ((maxs+r1)*x2)/(x2-(r2-r1))
						r1 add dx mul dx r2 r1 sub sub div	% maxs xs
						exch 1 index	% xs maxs xs
						exch sub
						dx r2
						shp
					}{	% the endpoint we are drawing is that with a circle of zero radius
						% x(i+1) r(i+1) x(i) r(i) shp
						r1 neg r2 r1 sub div dx mul	% this is point of ending circle
						0		% radius of ending circle
						dx 		% point of starting circle
						r2		% radius of starting circle
						shp
					}ifelse
				}
			}			
			sh3tp get exec	% execute the extend at end proc for our shading type
		}if
	}if
}bd
/sh		% emulation of shfill operator for type 2 and type 3 shadings based on type 0 functions
{	% shadingDict --
	begin
		/ShadingType load dup dup 2 eq exch 3 eq or
		{	% shadingtype
			gsave
				newpath
				/ColorSpace load scs
				currentdict/BBox known
				{
					/BBox load aload pop	% llx lly urx ury
					2 index sub				% llx lly urx ury-lly
					3 index					% llx lly urx ury-lly llx
					3 -1 roll exch sub 
					exch rectclip
				}if
				2 eq
				{sh2}{sh3}ifelse
			grestore
		}{
			% shadingtype
			pop 
			(DEBUG: shading type unimplemented\n)print flush
		}ifelse
	end
}bd

% end of language level 2 ONLY code

{restore}if not dup{save exch}if
% languagelevel3 ONLY code goes here
	L3?{	% we do these loads conditionally or else they will fail on a level 2 printer
		/sh/shfill ld
		/csq/clipsave ld
		/csQ/cliprestore ld
	}if
{restore}if

%currentdict dup maxlength exch length sub (number of extra slots in md = )print == flush	% *** how many entries are free
end
setpacking
% count 0 ne { pstack(***extras on stack during prolog execution***\n)print flush}if	% *** BARK if anything is left on stack
%%EndFile
%%EndProlog
%%BeginSetup
%%EndSetup
%%Page: 1 1
%%PageBoundingBox: 0 0 470 112
%%BeginPageSetup
cg_md begin
bp
sdmtx
%RBIBeginFontSubset: UWMBIX+Inter-SemiBold
%!FontType1-1.0: UWMBIX+Inter-SemiBold 3.3%%CreationDate: 3/31/23% Copyright 2023 Apple Inc. and its licensors, all rights reserved.11 dict begin/FontInfo 9 dict dup begin/version (3.3) readonly def/FullName (Inter Semi Bold) readonly def/FamilyName (Inter) readonly def/Weight (SnapShot) readonly def/isFixedPitch false def/UnderlinePosition -445 def/UnderlineThickness 243 defend readonly def/FontName /UWMBIX+Inter-SemiBold def/PaintType 0 def/FontType 1 def/FontMatrix [0.0004 0 0 0.0004 0 0] readonly def/Encoding 256 array 0 1 255 {1 index exch /.notdef put} fordup 33 /uni0050 putdup 34 /uni006F putdup 35 /uni0077 putdup 36 /uni0065 putdup 37 /uni0072 putdup 38 /uni0064 putdup 39 /uni0020 putdup 40 /uni0062 putdup 41 /uni0079 putreadonly def/FontBBox {-2182 -1128 4650 3072} readonly defcurrentdict endcurrentfile eexecD9D66F633B846A989B9974B0179FC6CC4458BB4CB99E3608702C78822367AAF89059868F63F93207640A6BD5DA214789139C491E02A37BF3866F2964E8D690D48D9F6C4A5EC22355F8123573812483E06B968AE84B5F20A982A0E6576475351697AB8C6EA040355C5542F297D7A3AF28AB93EA0771E0D56DBF00F7CA9CE9FB9FC2E0ECB00D04D5F5F3F24B987B546D6274971A477DEE12C44623C180BCDBA21172627610C4736632D1A4693E79719C3BC43DF5330790A52DCD4CF455ACC213F6B1C4BA249179DB360225568161552A16682E3A3604BFC39D571B1F8F18375BEE52D4E04AF3FC04947CD11FDEB74C4CF95685B9870F1CBA1018398ACCF062F4EFC35883444809D5246A3C31FECE9032478E62C03ACE6A1DBC50DE56115657CD2C20E856B6F417F37A357D398FBC5A781429A595E402C3C4372EC1D82424A168ADB33606A2F515E7BF1DBF1618D61D9EFA981E17765ACAA1005B356649406822C532ACB1795E3FEA442D54EA4F92BF258509FD539255BE3B02A756E8D3AF9C98A68652F5A8FB773BF552739ED38AD79ACAD9366DCF085330B574A65808E74F5E15B0A716CA99BDB2DE2F5A7E5AD306307BABD63AABE7B52449140BBD8A1472B0398C282F0B1D30E27831507D2F8319613E91CC005FDF5BCCA6708F94D8DE83D4D6BDD2C4D200BCF8512E300AA07C39551CAFED7F94965A7673265C3384550856B879AE704F41D2B826157319A40E08826019AE254A7536DE40E86698458EF6F7CA2A17F2908C9F05C156B725BDFBBD16565167D965E7BBB820CF3896C776CAF6FF9D4F2C406515B8A52178E7CC41A85A0194BB123AA4C7FCCC14FB8B0BF04427B69AC406511CC0C725910477DB613DD1B1DFE1CA349A581A38BA16941921C2E29A3E719C9E575C1660400F8BFF20FC10E913ED8FD4B6FA4DD74818B7DB52CEED594FF1236BBA710891FA8A406BDFB3D5C00A6E30A1886D41307378C68F7F19EC390D5361FD551E496FC51753D37424AAC7BDD34F96AA77068DE36461F1FEA706A484B1D5D6F93BD6823ED0751F5DF472927B8FC3E6AFC3FBC0B7E1154648BECB0A3B9CA3A52EABE177D295E55B4FC2810E4422D8F73E57B872C6E504E84CA1FCBA930DDB959F89979BE166C07FACBC7D6154ABA6F49E38125E91AFB3C03135EA7A67839FDC21D300F6D600D89F378807DEA204DB6B5CC51235EE822B46A748C8E3805CD4B0C816687710ECEE699BA7390B2D1E699333C5207AC57ED8187F13B99705D520FFB15D4A7B60A417AD8B048E02CCCE12F8365245A1A0645027B430085B8C0987F6A841BCCD5948B526E526F538B03C12802FE283BC5896584162CE64B2DD94620A2D3C5D65168D82ECCEF93BF907CA7843CCD868CE680BF23E7DEC743AB9D674C901FF98E4B5A6410F70F72732357963E7E6A79BDBCC0B12D28FFBB01D1FA10906E066C5A846FC923614FDEE451D495C8935A9B2766ED4C9C50A3C67805E9FD294E4A11306B6CC7F04A5B4EA403A29A1DE005A4DF9B9C118DBEE969E8F7D9DE316FCF7991808AE0D5B3654D4B73F5C8B3EC8E420169505DFFF9AC67B02F84DB45D5946B1FBB7147CC8F5A93F478EA5B90157836CC2FD47CE170CC966B70DAC2C114248B38D28AE70709670396EA64CA2FE8EBCCA74A09544E637581C913760FAAD186B4A62328D8E1959D8AA5B9CC03737C6CCE06EE20AA70D41A3A16F881E72EB637BE75AF8E238F9794F665874496ACCB4A8424D1949E2EFD952AD3BDB479B3F3F614AC356540FE1FE795EE8DBADFFBB523D212059D006E7E66A97DDB4D8179CAE14DFB3461DE57BE0FF34FCEA107484A1C0D2A677056FA5CC302C20BEC0FFF19A2E9703349B0E47BDF23B69C41D5D51543FE59D2AE06B49FECBDCEB07AA842213840DBA67067F424F337D5711A2982BE732776933F7726ECA321A3A291A4A8FF547C57F0F8B7DFCAFBC66DC658D310396E4343EA968B94C049487C35BC10F794F22471553B50279E88A6B3C62F9FF1ED9F4AADD27DF9A8FB625B00F2EB57FA701AA68FEE478315973A1C1A12EDEBA2B13DFAE5C07A420D38233E291E472A5D45FC8A31D02C8F7847AB4641B731633D6C20EC605CE1CC65D0665FF221F09F426E6CE5913078F93A8D981C4CA810571EF51061343903AD4DD42DC637E76A0151E71ADD05A246CA8A2469DF34AD74E19EEF74F7C17DEE7CF6460014889B7FC2C8DB92E8F018CC0FCBF1473B211CA1072209C500880BCFD2CBB3E8C3FC13B3BB2ED307CCDCF828337838614629DDAA0B3AF805D634A1612C7419CA1EB05DD6408B322303DB9F4921A403375CCE733DF5E49E1CE6578CCF1B6362FB0BDF559EBE58DACC7F74B082E534F45DA66FC2E710099BC9EAF75F4EB89184090DBCA459AFA1A451D4FCD4591FC1C88B908D7EAD914930E4C028BB437D9B82DA7C33F9CC96DDFA028FF92C65C7AF2FE8C1A8DC199864E7D149E72EB0A4FBCA2BAE218F971D5328BA9B9215CF92DA5333C333B205F82E467A449972C46A0B96C9A9391DC837DB9349900C1079E9EBB5C9E2BA7A1E3B2C669DD8639AF0AC12A98EAE03B3088BE59058770BDF926E32DDBFF4E67BD8134BE912CA5BC897A0137CBF48EC85EC1570D804551C9B18DE26FF68F67C12CC141933D9D2D6E9C4D10F9F94000B1FCA97DD1E96C32724B841FC5595D1AC3DB2213BBBAFE88807EE3AF432A6C47C8145969E51F3E5786CA0EDEADE1A2A62D4F0D0D7C0FEC38F1DD506DDFF6414407E8FF88A32A336FC27A05F1A4128FF17BD90D994A3073FE8C82BE5AD897EB06AC1949F633AB3B0DFB9175E179926B9A69EA65234847205FEB6697D488D08402AC56399D98F4C50B9D8BE6FCAAB74F2DE95391D883191CAEFC4835D1EC60326D0CB1E1A014CACD7D610633ED376BA500F4E3D2E43556AB0B8A816628B5B3039DD1A918929AD018971D5CB4DE01224CAA276D2FA2746D8F48CC6E8AEE0E72366D611A4FA892F6A040443D712E8FDE92730B225DDE5680D176391A5E60CAA50C65507F762602144B8CAF4E0BDCEB32807672203CBE36342468F44E690117F8EF146BA1A15F8B96199E2CA22010DA364EA2D0164CF3517C8E759DE7A0A4ED988E6C2B28AB73F7E621B893E918CB335A92525BE5435A523E9113B7C82ED0608DF15CCA1CBCB68F3F56ABE794A8D901547D1F5E9ADE586408267CB9431420119BB116DBA6DC7F8E4FDFF0FAFCB1858D53D9D6AB321AEA45E17CBB7D6B2E091301B09E3688137A66B5827FEB25CAB7BF4A40C818C7A4884CCD75E512DC7E2D43A90ACD1A6CA2A1E043D632881C0A463D2F653EDEED8E5B6292A1B19C2D49E5FB9CB37E6A4C5C3B5E98E3EAA4809CF21DF9C48E0CCB272958DD8C1A18483985F35B011D02EA89FCB5D5F9BA1B751425F253A20E9DB5A65E617B39BA699B20352AD13F009E8DC5805E12CCF980735F8F44EB5771949D48A74285A1346B50A6C20B9C519F4057B99E1DC18348816C55C313052F315EC2F501DA09C359717EA7AE5E204CF380076E96F5B0E36894895500B389ADED3032EEE67EB6F847B111565F2CA540D283614A8B2E4E83D114FB39812BB91E2A9873C57A5AF1FEE47121E2064AFC68C77F9D309DC5D6DFDD54DB951066BE29649B237DFB53A813B730C29713A1B5DE22D4035BF71DD9E9C77B0D6FF19B152AC64DFDCCDEBD7F78769B63D1D5834D562DCA8F8B92E710E9A6ED8B62D020ED4C60EB4AD7D2596FFFD73928015C8243F2C0BEB19D4364040437299AAD4429D05082177ADB9013C0213FD8E323D539F5580E8EDF00F01598FD45CC4DAEB9343833C9698CAA98FA1BC429B5E23EFB54E7524D7B999F25EBAFDBEEADA9E6D4F2EA2D5BC5762566697B501D1908204F982DBE9A9B50B2D7A9C425B619A2ADF07A57F2F3BFCE3EA34C865A1D3C6A483C88C02C5C9A8CFD471947350138A55A4C158CBEC32452552683FD6107598E7951C82AE8335224BCB8853742774DE041C1B2838BC1055B9A897698FB943010D7EDD7AE3B88A83CBEA7F6B7AC025277FF5D7DE1093D1A75639951B2FC3C0A1DD573323B1BBDFB107EF4FEA3F39ADB2738C798A665089F3D6D1E1880740717FA0799AB0CDE3CEA679CBEA30ADD132475F06937DA3DF12E1DDE795FE3ED9891107EBFA5EB186934F92D7C0A48D54EEADAF05FCE558F07F40CE2796460181760CED2D026EEA8572A5E52BD160ACA445BC0B5D72D126DC0FE41597E3A6428B77CBE0AC5CB87872B8B0EECCD3DD68AA495E77BF5A4CDAF06595A824FB008E4E3FA4B2391E009C716F55A73389B372A31E9B632CD58038324A1A21E3B9697B61EB35AB3E3682E76A0C3FC7DBB7665366E67CA6486A405A43E84E454D83C26050A4291CE7C219DFC0A507A0D899EBF944490AA2251CDE76E201C0BB9B525CDCCD6FD58610BE95550756BCADC5F1D36750D326E491D545640F77F07EC97496D1A29651FAAB7B9DD63C7F632F2DC43259160DC13CA0604217E3BF59B6C2230B0B713C651AF420D0CFA8ADB3A29FFE62F73AC1F029C796D4A494E0CDAB52A9392C58F89558B39E451AEADAEF494AF196461DC64F2B5959E8DF87894FF3461D9F97C79A734381CFED7F9A4F844F2048FEBA3BE9D85ED0036C2A4A18FA111E9A6471609E79D320A6F9B231D7DFD6F3A111806354FC4560D1F6B385DB153C69C0FA643F329D94ED8B23549E473319FE40A1E93A0A0804BADC71E65B2A207972E5AE7A56F917E4F3BB857A6BD2AACE41940339D31CF87C1A1213EC92BF6555E18AD8E1540F6022F3A1D7236D85E12C76E14415744379E819E845BF00D2052C7215778B8734CD4F7F39B688C9064D2A48ABFD491BEFDF32D22B3217332A745305BE45344582C28A8F2E5A5BFC2A0AA47CC98EED755E5B44BD6E4439250D6DD4F21A59F00347508ECACD3B1F30AE7F6B36747092F2CCDF0A8C856290D018B2BA38E44E498C76AF0A5D9D9D1C54B7D8210F04E09FE97806E7FCD44734895AB4C473F57BE969D1EE87849601EF7193261EF71A90F5B81F768945E09732187DEA63E0DBA74C0334EFBC4C26EB095D5E51612775AFB0A8266301892E2B9D751BFB252EFCD128461696DDBF53BDA08C45DCBEF56B7355A32FEAF6C5147C7DE96B9C52E32C82957117AE85E32DB27376054CC8BA9918D9E659934724D1CAE5107BE899E84234A0F756F0A83A6454EBE08ADA8E9CC974B19E1AC71BFF2D0ABB195CFD74A5A5F3E3531E22714122539021F0151421D08BE28DC700C04E6121DB46A943BA1AA3DC0AEB25EBAD9C5739C46BB5084E1D20EEA1D466D00DE03BFAD600D966E1782A9913E853E3016CFE8D69477DAC223A7610E6E72CF878F95A358BFCD62245D5A83C77614DCC68AA6E0198F8CB59DB99477E75A4748F517C29E138E76754380026DB06A15EB012A5DBD75C022FDB888D0B0A3AD83EFE64CCBE2B1A183985BE573245109696BB25ED336F293E04E2C2EEF4A79BF15D0FD1263BFD9EC90EB52253333E7FD3C8A1003DB0AC4B6F9B799921D6A53546DA230948E275C9CED8C949354C86330C7C6EED3D9F87531AD0DF1BF9D554F63097D7D42A3CD40C97C32D5FBE5EC87E36D7E066F9E3B4AC207C97EF45CF7FED1E9C516231E4B367EEE1047D45605469DCA8F9AD9A0A3166B40157BECE8DEF7307766CC986D459A6BF7152DCEF113378A014ECDF811C65112DC918B0E67967DCBC08696BE912857340923BCD4E62503C0E6C366DE5CE00D1B7263AF77DCA82AFC960340262BD09220887EED00CCE17CD20BE3E453C50128161EEC95C68D52652CCB02A93954305FCB1ED373884F6C59CFD7ED20EB01196D646C1E8775F751B23A7C27B6C0AA1480D9C73A749DDFEABC4853BA2AC281418B8A035938B2947AD0BA0C8ADB21328A065B256C4279FCC270D315E31A6A382C60EDD58555BAE170FF8EFFAB1DE06C67CABD6B1C169636660716C282C6824F8C26039A5C125D6A2FB63F09C262B381E26C4C25F620B0D6C9AF303110190C4C8FB236B8B63977F9262C49E3832D635C426247D59B3D5AF59017BE6B5A5C46A14C0EAC8A43EE04AAD7FE3C6E8B5D95AC0F5D1DE51EA0B79DBE28558F42762CAFA4228BAE90D00A2057BDDD7D5370435DCF83DC0E5E080EFD7D8C80F8B5EC6E26A10C04A72F1CB1694F33A5C0F51434BF1A6C00672AF6DEEF1DC885C210B2A04593D33CAFBE91B63D79648848E35F3E88C41044355EE4184FA28F129D9884AC845802AAA1CCC646BC4D28F8E6B17DD5735C9FD902439386A31A8C30FA11C5307C1FF74C642901EA81B2799BB346CA2E61404656644DB8B5798FA786634F23F537EA769C3CEE77A6113C435FD680C49A7F020DF59C91863D52D0DBF368E4940D6EF3441757E45597D0DEAD2CF93F3517AE462BBC66A323D28AA6A6A06D11867BE960BA532F126EB28058C8675FA9F6C2C75276ABE70EBDB29000230B66D55A330C4077D5E6EE57F920C40C03C276F7959C8B2B6FDB6098B06F15E04E8E06D14BEA7125C015C2E290A5E21108C2B704826A1EF26D793B21300786FE00158B357DE15762AD9A90C2E39CFD08F8836C402B4BE1FB1D6007B2BD891C459FFA993AFC5E3E1556044911A92F4EEEF743654D275BD3C938CEB2389860313A275A0C7F16F98D8B9B49FEF50F8091EB726C979DA54E2986FE325DEEB828C6630A7624912B9F77A9EBD5F4FCB09DBEFCDC2BEA677F3A6554B340B7C76BF41F6BFF61AFF79CC05DCD01D22D9C8F2E0C840BDD14ED984394EB3746D7C6382B504726BFE43F3BF4AB8B46F3C6A67D1D36ED34C0B70FE06E4A13F90FFE21AAEB46E7AD396296520E5B6F4F34855AF359F847624F8F2600643F540B847A1A7A8D7A9BFAAF80513493D9B48D07D72149FF86C492BE3ECA663EE27DE3317ADD71E1F085A7D7EBAB94EDBFFC3DFC20EB75D9EAF126DE0FAD5D196172C8A8ADBB7BBA7666D3BC8B6BA109FB55B315AD57DE5D757C8AE851FB09F6381EED622759718BF7CBC159DF05718F5CC003D05CAA9F00A2EB02B9DFAD2C4FC65547CE90D83713922F96E976C075909DAC67E598DC52E9F60F899550DB556169C88CB5CBAD4282C1F9E4D0CB98000DF7DD3717A9D8AC02A824EF2F534D36B252C56B4279C323D0D8F20F7C84CD43EBB1270629D1F1637E23A9C41AB9E85F492C9152D0DCD733F3CFFB4A24017C91DA17E170C955D8A20B1EA0199D05C93CE0F92ED01330A7C9E65E7ACE079041379CB1822C87A50210F046E8B8EDFFC9A8EC0E2F756B5835361FED8B39B1B4B715DEB9BFFA31881D46AF4A1E48DF5800BF1D945F934069BB75377C8BB8256F0234E8272D9EE45DCBE267A3991FC27EE7E57D4296547358497CE00B0A97C7F12D9440E47E0F909D247958807885A0254E6F2BB442AE9D8E9F2FB71DA4BD48CDF58F58CD68BB3B1ABF5A1D9C92215A17CC02ED83D1862D43E2D68444F6E9873E1C0F277EE7616AC2BC313D74FE68F318D7AE38500E0D13563224F68B8AC5197E165C45C9D4AAB4F125CF3B82A15A2668A1C689988D548C01061713F754193F42B19A5EAA2F559CAD42B3C54B90EED96FC5F122CDE5A69F6CF70903AA9AB3B0BEC77D11B5531A2DD75019442D01153A5A2A34A59A4C116B5AB027FC15C683C46528E640CE1727E46AE3E1A4AA5C8A2B9C6B1C087A74F6C64F449118DCF3A7A9A41547F6390451DF58A1F6E88881E227B31C9A21D0C17AB8F0562E8AE4213FC56E56678BF93387702E513C497D0033031C2B91099554DA649D3B3696DD6EAF182B9B18FE5C1B9D1B2BCE9A486917061E47B39C80AC0CC8F0A71371CDC906A66E055F616D7EE550DE871D2F08FC94AA6DFE45E0F34F91C48EA0F5CEF64EB0D9EA9156D47FE4496BD9571DCF69FCC586CADDC65160278A88997B612EF02AA323D76356334C48AD98A601A71BD67137DED2517947FF54B4D9BC59B7117D409BC6F46CD0F41A87FB4152C0BC761C6C24E2DCD7AF60F0D22028A38D501059EE50D8C119432AEF2F77C332BF7EC2456B5B94F5AB5BA1E21D7D1996867C9329D1B73C2FD5298A763756B2A4899B7E2BAC92D51546C928938041D9B83F3808E3B54A6657A243CF755B3DAAD5BE293702AA02265DEBDE7757FE54BDC485B1CF1F15AD038FF708812FF1F122507D6C842B05208E136333F1A44D8CABF2BA52E77CE930832E0FD609D6F752B54E99B60C13DC79381476B47455D24A78AD19541FB982236C7C3A375A6AA5CB3E7D88CA425C4AF8FBEA116E500695B21BD3107CA6B67988640F42219EA463C2FB76BC8813A6B28D32985AA636B2A26D70E56F6BE7B0B3618E10ECF1FE475A38A49D8CD1BECCBCE4D01057E2B5531B227A3879412434F68271B236547F6D08C10EA0084305994178ADE9895FBDA1A7A09846DF9DA611C40E8FAE6FFC00BF576290A53E81CE5883594EE2100CEB8687D943DFF9633D68A5941735C4B881F4409371C2271039DCFCD9DC5A675AE76F11E21940DED15DDD32FAE2A3DD65362F28F45684D9A0C42383C31E5C688A935A27404D6EFA96E1ADA3B22B5E6FFD553BED93126E583CC6034A33E5C96BF840BA245D0A53515CEBB965341B7138781E845F0872ACB8C3EEDCD75045ADAF2638222155D4C1F171DE5862D3631DEB3A92A998ED6AD91B7E0B9B84A1750105234C27C9A7D15491F073A8C2A35F38BA8FAA23949B1071DC64BD6332ACD035E1B6728821296976A86B690CFEB5E5332C1B5E150872F9F97EC0B6A934D8634C58473FEBE88A0EAFEA2EBDC23F7976B1A395AB2A972296FA2A34E838C34562331F08DFEEE3E9F7CEBF29DE6C259045FF91721A0FD5FF3F5C3241BFD10D4FE46308F0A45FE92DB4F981824DD4CBF8FA382DD42B43B15BD27FAAFF30EC0EFC86F498C15C9EBBFB88B3CFAA9F22EAE86374A1210C424F2C3003EBF12B7AFAEF96560A4550F8EE6E8A57DE8F64691CFD3C5F34D220015B01DC3FBA9C53249F3803D36DA4C49745677C051AF35046109B62956AD1F1526066FC97CC66F95DCC4E1E89B92D3801A43F7F53DB8790493D8E41E11E0A868D65E14A8E88EF11ED856528AFF20781C46C13A84530F20B50DCF0028CEDCCE9FF6D5720798385FB22A5297BC96936FCA306A1722E465836F3D0FF02CFF28B3A351CEA011CC727946E40065A7CFE6760206984F371927126DAECF17B2F59C5241424EABEACBEFEEFDA3FE483DC577236B328AD84E36B52F6944E3D816C7622CA5A3BAD048442CC9FAAFFAC489C0D7B47C6EFE815DE68FF39C68297EED041D37380A01798A804996A3CFD9F472619AF3C4616D10EC18EDE77B147CCF84FBA6F57B28D7815F597F9D8C3E397AB81927E2487879EC306BC0B80B2A3296725859417F63ACF9F3AEC0679FE2E78A09A7F295ED6B60A2469FB5F74AEDDE009DDDD10A709D72F65B82D3C3FBF6D1C7B16AEBE8D769547AC58B32AA198C6BC8A2A031941C11470EA6CE997B85DE749920AAF22A39DDF7FA067B76C01BF549999E1CDE3639EDE9203CAD7352B6322F536AA5141690A724FB9500EE01873619CCBEC30D8E8C1E6A0D3B11372FC03DFD3F7C1F965A10EE92140AEA78F5B436CF00051CA2A8B4174F24E25D559786F03065C04249C9635086B3C3CB053D52AC22F789BDB66D556A24F6251800A5F175E0341A8333525595CF5371315DC0DB00992B95E9FF1F8265826BBEEE823325ACC3488C1E140DA40049190A7F3CD563629F299B9089EA3285C7B19A9C502A9C39A8C875D2ADB327AB6B7F008286FD50153762BD696ECD95CDFC536CE3C12B08A1D9E97738B15F2359ADA844866CC1FCA006535CF9868E16EB9ACBBA2549741FE255C03F528601788EE3D987FB859515E71FA28CBC5DF07B215D589C987676E43F7F4ED8F6B3861EEBEF79D0F7647CF8A5822C99E879D68AC5F377206ECF482B07FC67CEB0A476F20FE0AA78891FC48A7A67A2B63A25EE1101CF0D32834DAA0F2467BB42B4F8437A77EC0144FC0079338F82574E6CFD184F43D604331E70E1F802C8D0FFB3F70D30E7F673FA2830D5ED973E65B75418E41929B2030F887861DB4754092B94D3D928610394FA1413A746AE8CBC02C5A7DB86D2C99122380DF120FCDC09F9388A5A33400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000cleartomark%RBIEndFontSubset
/UWMBIX+Inter-SemiBold cguidfix
/F1.1/UWMBIX+Inter-SemiBold renmfont
%RBIBeginFontSubset: FEBAIL+bBigerOver
%!FontType1-1.0: FEBAIL+bBigerOver 1.0000.1.0000
14 dict begin
/FontName /FEBAIL+bBigerOver def
/PaintType 0 def
/Encoding 256 array 0 1 255 {1 index exch/.notdef put} for
dup 33 /M put
dup 34 /A put
dup 35 /P put
dup 36 /space put
dup 37 /R put
dup 38 /O put
dup 39 /T put
dup 40 /C put
dup 41 /L put
readonly def
42/FontType resourcestatus{pop pop false}{true}ifelse
%APLsfntBegin
{currentfile 0(%APLsfntEnd\n)/SubFileDecode filter flushfile}if
/FontType 42 def
/FontMatrix matrix def
/FontBBox[1024 -42 1 index div -209 2 index div 1206 3 index div 819 5 -1 roll div]cvx def
/sfnts [<

00>] def
/CharStrings 10 dict dup begin
/.notdef 0 def
/space 1 def
/A 2 def
/C 3 def
/L 4 def
/M 5 def
/O 6 def
/P 7 def
/R 8 def
/T 9 def
 end readonly def
currentdict dup/FontName get exch definefont pop end
%APLsfntEnd
42/FontType resourcestatus{pop pop true}{false}ifelse
{currentfile 0(%APLT1End\n)/SubFileDecode filter flushfile}if
/FontType 1 def
/FontMatrix [ 0.0009765625 0 0 0.0009765625 0 0 ] readonly def
/FontBBox {-42 -209 1206 819} readonly def
/UniqueID 4422725 def
currentdict end
currentfile eexec
54544758EC884CF30C3CD503CEDBFF3839C47C3C3333173232E3FDBFF439491DB843E1924E63AA7726BBB0485AB56D93D8C0906F647A47162891E73FFC2A9873C4B1EAC5EEBDFFC4D06084FBD84139DF4583C6E259D10699944D1068C9C45667DCCCFB9B7EA01B606435EDCBD273ABAC093D14085CCBAC149BD7382E842CFE0D7FE4FD2EF589A2471F6074A80A8B675C2F7A50D63AC1EF90D787BADD11633CB01CF6EE3B37AAF9078A69AC4740E9B6525D78BBD839551A1CB80DB8682FA5E87591BBD6EE8B946063A2A58D9CA3685AB305495DC5FB5747EB8A9A059C4976C0FE4EEAB1D56FF47F1E9664ED9F4A7DAB763AF92B2F6CF2FA7DEC24710E0B9096E30F772BA7FEA9BDBE496C42ED2CEB58F54E80BDF57CE7B4DB6CCFE7182F43BF93CCA0767AF95D62C5D2C3DC6AE1E6D139F51A2C63432117F1714C5566572EE9967A715420ABDCD1D7BD74F8450B89965FCC81C6ACA565C5F3CCF91D430D1F953E4F1A645300A98DD8C47CD64555F08F422340A85404EAE0D3229C4F9336B9470CACBD6BBF3395104750A915CC6EAAC197668267B8C62D2764C8CD69FD937CA3C924D997A0EDE7964BEB9EA2F92EF70C5E5DA0AA55675454E59AEC12A68086DDD95476477C46AE143377694529C58844212FC811560E27EEE2CF00BCB28290903B6EADCF584518CA93D87C86FA070AFB3EF631D5B88CD72736D3B06E2257F6838D74E988675BA997E917EEB8CC36EF924E66E906DC8EDC8374B88CFF27B776EA3697DAC1A9EA810648BBF877747C6B6B24ED80923B702AE8E227638E113D14263ED7188D993194EEA513E224388184D2402CE3BA8CB1B9C12F2546F6050BB5953C3BFFB9B687DDEB18E7CF7B6E2C83F9C6CD23613A89E39CDBF3F4A28EB58879A27D4C3BC0564C30D490BEBC042F464186631926AEDF003259A9B87B26191E586F565F3AAC6C3969A69319B59F130E31A7E3A801A0CBF8A67D88EF2F7E4D49EA83F6F9F5230981A3EC2CEE431C24DA56771F19B5F26372CB1B4FFD3C397CAA0A3D352AE2BFFAA149D3A7AB1E0B517BE3725D7EA297EB9CD7C839F3D60860D3897F601D190568E0D55C03A680DA1A30AAF80E58ACF329680D19F3F9D03DCDF2F0ABE5C6D6BE75005F7E53C317EFFB7A2B1317A59A34F1574A3B1BE1E21C53C2901E8B8C48C09CD2A6AC0464AD1FE7F5E910A2D2A8084D1205235D6DD0EE5EBAB17532EC75C7637C803D9A5BD9BA67B243C3811AB2590A5D09FB6F788F58C0FC2A553DA74C54FBB76D12F5E28C125FCAF4CAA53614CA6B112A71551DD0F039C354AAC85F8CD54FE4283E8244119AC725E495959AFE283BB8A9AB25E868DA47189ADCC7EDDD9BB26663D5899419A409D7F5501AF41E87FF697F9B3999F1466507A11F6259A69DC506764E214F0B1AF35FDAE7B9D11808CAEC107558FDDAEBD8987A11

0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%APLT1End
%RBIEndFontSubset
/FEBAIL+bBigerOver cguidfix
/F2.1/FEBAIL+bBigerOver renmfont
[ /CIEBasedABC 4 dict dup begin 
/WhitePoint [ 0.9505 1.0000 1.0891 ] def 
/DecodeABC [ 
{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 

{ 1.0 0.0 3 -1 roll 1 index 1 index le { exch pop} { pop } ifelse 
 1 index 1 index ge { exch pop } { pop } ifelse < 
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000001010101010101010101010101
0101010101010101010101010101010101010101010101020202020202020202
0202020202020202020202020202020202030303030303030303030303030303
0303030303030304040404040404040404040404040404040404050505050505
0505050505050505050506060606060606060606060606060607070707070707
0707070707070708080808080808080808080808090909090909090909090909
0a0a0a0a0a0a0a0a0a0a0a0b0b0b0b0b0b0b0b0b0b0b0c0c0c0c0c0c0c0c0c0c
0d0d0d0d0d0d0d0d0d0d0e0e0e0e0e0e0e0e0e0f0f0f0f0f0f0f0f0f10101010
1010101010111111111111111112121212121212121313131313131313141414
1414141414151515151515151616161616161616171717171717171818181818
18181919191919191a1a1a1a1a1a1a1b1b1b1b1b1b1c1c1c1c1c1c1c1d1d1d1d
1d1d1e1e1e1e1e1e1f1f1f1f1f1f202020202020212121212121222222222223
2323232323242424242425252525252526262626262727272727282828282829
292929292a2a2a2a2a2b2b2b2b2b2c2c2c2c2c2d2d2d2d2d2e2e2e2e2e2f2f2f
2f2f303030303131313131323232323333333333343434343535353535363636
36373737373838383839393939393a3a3a3a3b3b3b3b3c3c3c3c3d3d3d3d3e3e
3e3e3f3f3f3f4040404041414141424242424343434444444445454545464646
4647474748484848494949494a4a4a4b4b4b4b4c4c4c4d4d4d4d4e4e4e4f4f4f
4f50505051515151525252535353535454545555555656565657575758585859
59595a5a5a5a5b5b5b5c5c5c5d5d5d5e5e5e5f5f5f6060606061616162626263
63636464646565656666666767676868686969696a6a6a6b6b6b6c6c6d6d6d6e
6e6e6f6f6f707070717171727273737374747475757576767677777878787979
797a7a7b7b7b7c7c7c7d7d7e7e7e7f7f7f808081818182828283838484848585
86868687878888888989898a8a8b8b8b8c8c8d8d8d8e8e8f8f90909091919292
9293939494949595969697979798989999999a9a9b9b9c9c9c9d9d9e9e9f9f9f
a0a0a1a1a2a2a3a3a3a4a4a5a5a6a6a6a7a7a8a8a9a9aaaaabababacacadadae
aeafafb0b0b0b1b1b2b2b3b3b4b4b5b5b6b6b6b7b7b8b8b9b9bababbbbbcbcbd
bdbebebebfbfc0c0c1c1c2c2c3c3c4c4c5c5c6c6c7c7c8c8c9c9cacacbcbcccc
cdcdcececfcfd0d0d1d1d2d2d3d3d4d4d5d5d6d6d7d7d8d8d9d9dadadbdcdcdd
dddededfdfe0e0e1e1e2e2e3e3e4e4e5e6e6e7e7e8e8e9e9eaeaebebecededee
eeefeff0f0f1f1f2f3f3f4f4f5f5f6f6f7f8f8f9f9fafafbfcfcfdfdfefeffff
>  dup length 1 sub 3 -1 roll mul dup dup floor cvi exch ceiling 
 cvi 3 index exch get 4 -1 roll 3 -1 roll get
 dup 3 1 roll sub 3 -1 roll dup floor cvi sub mul add 255 div } bind 
] def 
/MatrixABC [ 0.4124 0.2126 0.0193 0.3576 0.7151 0.1192 0.1805 0.0722 0.9508 ] def 
/RangeLMN [ 0.0 0.9505 0.0 1.0000 0.0 1.0891 ] def 
end ] /Cs1 exch/ColorSpace dr pop
%%EndPageSetup
/Cs1 SC
q
0 0 470 112 rc
127 0 0 112 0 0 cm
BI
/Width 381
/Height 336
/BitsPerComponent 8
/Decode[
0 1
0 1
0 1
]
/Interpolate true
/DataSource cg_aiproc
ID
JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$
JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-
JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$
JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$
JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$
JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$
JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$
MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$
JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-
JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$
JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-
JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$
JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$
JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$
JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$
JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$
MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$
JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-
JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$
JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-
JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$
JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$
JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$
JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$
JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$
MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$
JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-
JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$
JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-
JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$
JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$
JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$
JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$
JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$
MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$
JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-
JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$
JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-
JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$
JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$
JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$
JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$
JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$
MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$
JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-
JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$
JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-
JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$
JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$
JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$
JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$
JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$
MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$
JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-
JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$
JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-
JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$
JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$
JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$
JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$
JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$
MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$
JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-
JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$
JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-
JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$
JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$
JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$
JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$
JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$
MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$
JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-
JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$
JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-
JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$
JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$
JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$
JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$
JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$
MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$
JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-
JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$
JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-
JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$
JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$
JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$
JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$
JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$
MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$
JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-
JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$
JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-
JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$
JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-JcC<$
JcC<$JcC<$JcC<$MZ88-JcC<$JcC<$JcC<$JcCW-J,
~> %APLeod
EI
Q
1 1 1 sc
0.60000002 i
q
-2522 3184 m
1318 3184 l
1318 -1502 l
-2522 -1502 l
h
W
0 0 470 112 rc
2 0 0 -2 140 98 cm
/F1.1[ 14 0 0 -14 0 0]sf
0.090909094 13 m
(!"#$%$&'\(\))[ 9.008523 8.511364 11.723011 8.297585 5.791903 8.297585 8.824574 3.475142 8.824574 0.000000 ] xS
2 0 0 -2 140 50 cm
/F2.1[ 18 0 0 -18 0 0]sf
0.20800781 14 m
(!"#$#%&'&\(&\))[ 17.964844 13.570312 14.308594 4.851562 14.308594 14.361328 14.308594 14.466797 14.308594 14.291016 14.308594 0.000000 ] xS
ep
end
